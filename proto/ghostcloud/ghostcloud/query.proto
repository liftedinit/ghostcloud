syntax = "proto3";

package ghostcloud.ghostcloud;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "ghostcloud/ghostcloud/params.proto";
import "ghostcloud/ghostcloud/deployment.proto";

option go_package = "ghostcloud/x/ghostcloud/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/ghostcloud/ghostcloud/params";

  }
  
  // Queries a list of Deployment items.
  rpc Deployment    (QueryGetDeploymentRequest) returns (QueryGetDeploymentResponse) {
    option (google.api.http).get = "/ghostcloud/ghostcloud/deployment/{name}";
  
  }

  // Queries a list of all Deployment.
  rpc DeploymentAll (QueryAllDeploymentRequest) returns (QueryAllDeploymentResponse) {
    option (google.api.http).get = "/ghostcloud/ghostcloud/deployment";
  }

  // Queries a deployment file content.
  rpc DeploymentFileContent (QueryGetDeploymentFileContentRequest) returns (QueryGetDeploymentFileContentResponse) {
    option (google.api.http).get = "/{creator}/{siteName}/{fileName}";
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetDeploymentRequest {
  string name = 1;
  string creator = 2;
}

message QueryGetDeploymentResponse {
  Deployment deployment = 1 [(gogoproto.nullable) = false];
}

message QueryAllDeploymentRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDeploymentResponse {
  repeated Deployment                             deployment = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDeploymentFileContentRequest {
  string siteName = 1;
  string creator = 2;
  string fileName = 3;
}

message QueryGetDeploymentFileContentResponse {
  bytes content = 1;
}
